#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};
void create_list(struct node **start)
{
    int n;
    printf("enter the value for the node\n");
    scanf("%d",&n);
    struct node *temp;
    struct node *new=(struct node *)malloc(sizeof(struct node));
    new->data=n;
    new->next=NULL;
    if(*start==NULL)
    *start=new;
    else
    {
        temp=*start;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=new;
            
        
    }
}
void insert_start(struct node **start)
{
    struct node *new=(struct node *)malloc(sizeof(struct node));
    printf("enter the value of the node\n");
    scanf("%d",&new->data);
    new->next=NULL;
    new->next=*start;
    *start=new;
}
void display(struct node **start)
{
    struct node *temp;
    if(start==NULL)
        {
            printf("\nList is empty:\n");
        }    
    else
    {
        temp=*start;
        printf("\nThe List elements are:\n");
        while(temp!=NULL)
        {
            printf("%d\t",temp->data);
            temp=temp->next;
        }
    }
}
void insert_before(struct node **start)
{
    int k,n=1;
    struct node *temp;
    struct node *new=(struct node *)malloc(sizeof(struct node));
    printf("enter the node before which u want to enter\n");
    scanf("%d",&k);
    printf("enter the value of the node\n");
    scanf("%d",&new->data);
    temp=*start;
    while(n<k-1)
    {
        temp=temp->next;
        n++;
    }
    new->next=temp->next;
    temp->next=new;
    
}
void insert_after(struct node **start)
{
    int k,n=1;
    struct node *temp;
    struct node *new=(struct node *)malloc(sizeof(struct node));
    printf("enter the node after which u want to enter\n");
    scanf("%d",&k);
    printf("enter the value of the node\n");
    scanf("%d",&new->data);
    temp=*start;
    while(n<k)
    {
        temp=temp->next;
        n++;
    }
    new->next=temp->next;
    temp->next=new;
}
void delete_start(struct node **start)
{
    struct node *temp;
    temp=*start;
    *start=(*start)->next;    
    free(temp);
}
void delete_before(struct node **start)
{
    int k,n=1;
    struct node *t2,*t1;
    t1=t2=*start;
    printf("enter the node pos\n");
    scanf("%d",&k);
    while(n<k-1)
    {
        t1=t2;
        t2=t2->next;
        n++;
    }
    t1->next=t2->next;
    free(t2);
}
void delete_after(struct node **start)
{
    int k,n=1;
    printf("enter the node pos\n");
    scanf("%d",&k);
    struct node *t3,*t2,*t1;
    t1=t2=*start;
    while(n<=k)
    {
        t1=t2;
        t2=t2->next;
        n++;
    }
    t3=t2->next;
    t1->next=t3;
    free(t2);
    
}
int main()
{
    struct node *start=NULL;
    int ch;
    while(1)
    {
        printf("\n 1- create a list \n 2- display the list \n 3- insert a node at the beginning\n 4- insert a node before a given node \n 5- insert a node after a given node \n 6- delete the first node \n 7- delete before\n 8- delete after \n 9- exit from the menu driven \n");
        printf("enter the choice\n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:create_list(&start);
                    break;
            case 2:display(&start);
                    break;
            case 3:insert_start(&start);
                    break;
            case 4:insert_before(&start);
                    break;
            case 5:insert_after(&start);
                    break;
            case 6:delete_start(&start);
                    break;
            case 7:delete_before(&start);
                    break;
            case 8:delete_after(&start);
                    break;
            case 9:exit(0);
                    break;
            default:printf("wrong choice entered\n");
        }
    }
    return 0;
}
    
